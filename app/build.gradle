// Note: please use similar filename for release: HymnsForAndroidv3.3-Piano
plugins {
    id 'com.android.application'
}

// you can choose to put either "guitarSvg" or "pianoSvg" depending on the sheet music you want to include
def svgFolderName = "guitarSvg"
def hymnAppVersion = "v4.7-Guitar"
//def androidVersion = '28.0.0'
// filename: HymnsForAndroidv4.x-Piano.apk


android {
    namespace 'com.lemuelinchrist.android.hymns'
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.lemuelinchrist.android.hymns"
        minSdk 24
        targetSdk 33
        // increment version code if you want to refresh the database cache of your phone
        versionCode 179
        versionName hymnAppVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        // add the code from below line.
        applicationVariants.all{
                // this method is use to rename your all apk weather
                // it may be signed or unsigned(debug apk)
            variant ->
                variant.outputs.each{
                        // on below line we are setting a
                        // name to our apk
                    output->

                        def intstrumentType = "Guitar"
                        if (svgFolderName.equalsIgnoreCase("pianoSvg")) {
                            intstrumentType = "Piano";
                        }
                        def name = "HymnsForAndroid-" + intstrumentType + ".apk"
                        // on below line we are setting the
                        // outputFile Name to our apk file.
                        output.outputFileName = name


                }
        }

    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.1'
    implementation 'com.android.volley:volley:1.2.1'
}

task cleanSvg {
    doLast {
        def destinationPath = "" + project.projectDir + '/src/main/assets/svg'
        delete(destinationPath);


    }
}

task copySvgFolder(type: Copy, dependsOn: 'cleanSvg') {
    if (!svgFolderName.isEmpty()) {
        def sourcePath = "" + project.projectDir + "/src/" + svgFolderName
        def destinationPath = "" + project.projectDir + '/src/main/assets/svg'


        println "copying source svg files from: " + sourcePath
        println "to: " + destinationPath

        from sourcePath
        into destinationPath


    }


}


build.dependsOn copySvgFolder
build.mustRunAfter copySvgFolder


